{"version":3,"sources":["index.js"],"names":["NameForm","props","state","value","handleChange","bind","changeCallback","submitHandler","selectChangeHandler","event","this","setState","target","onSubmit","type","min","onChange","pattern","className","OwnSelect","selectId","changeHandler","e","React","Component","chosen","entries","push","key","desc","newText","split","map","item","i","OwnChangeHandler","GameCreator","gameState","words","option","id","onClick","createGame","Field","dimensions","getData","num","ret","require","default","sample","axios","get","params","number","response","data","rows","r","row","rr","Tile","word","size","divstyle","textAlign","float","width","height","buttonstyle","display","wordWrap","fontSize","style","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8112fed3.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n\r\n\r\nclass NameForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: '5'};\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.changeCallback = props.changeCallback.bind(this);\r\n    this.submitHandler = props.submitHandler.bind(this);\r\n    this.selectChangeHandler = props.selectChangeHandler;\r\n  }\r\n\r\n  \r\n\r\n  handleChange(event) {\r\n    this.setState({value:event.target.value});\r\n    this.changeCallback({value:event.target.value});\r\n  }\r\n  selectChangeHandler(event){\r\n\r\n  }\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <form onSubmit = {()=> this.submitHandler()}>\r\n          <label>\r\n            Size of field n*n:\r\n            <input type=\"text\" min = \"3\" value={this.state.value} onChange={this.handleChange } pattern=\"\\d+\"/>   \r\n          </label>\r\n        </form> \r\n        <div className = \"options\">\r\n          <div className = \"optionItem\">\r\n            Gameplay type:\r\n            <OwnSelect selectId = {\"gameplay\"} changeHandler = {(e)=>this.selectChangeHandler(e)}></OwnSelect>\r\n          </div>\r\n          <div className = \"spacer\">\r\n\r\n          </div>\r\n          <div className = \"optionItem\">\r\n            Options:\r\n            <OwnSelect  selectId = {\"options\"} changeHandler = {(e)=>this.selectChangeHandler(e)}></OwnSelect>\r\n          </div>\r\n        </div>  \r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nclass OwnSelect extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.changeHandler = this.props.changeHandler.bind(this);\r\n    \r\n    this.state = {\r\n      chosen: \"default\",\r\n      selectId: props.selectId,\r\n    };\r\n    /*\r\n    this.changeHandler = this.changeHandler.bind(this);\r\n    */\r\n  }\r\n  OwnChangeHandler(event){\r\n    this.setState({chosen:event.target.value})\r\n    this.changeHandler({\r\n      event:event,\r\n      selectId:this.state.selectId,\r\n    });\r\n  }\r\n  render(){\r\n    \r\n    var entries = [];\r\n    \r\n    entries.push(<option key = {0} value = \"default\">default</option>)\r\n    entries.push(<option  key = {1} value = \"sparse\">sparse</option>)\r\n    entries.push(<option  key = {2} value = \"full\">full</option>)\r\n    entries.push(<option  key = {3} value = \"minefield\">minefield</option>)\r\n\r\n    var desc = \"\";\r\n    if(this.state.chosen == \"default\"){\r\n      desc = \"68% of fields occupied \\n 4% assasins \\n example:\\n 5*5 => 17\";\r\n    }\r\n    else if(this.state.chosen == \"sparse\"){\r\n      desc = \"20% of fields occupied \\n no assasins\";\r\n    }\r\n    else if(this.state.chosen == \"full\"){\r\n      desc = \"100% of fields occupied\";\r\n    }\r\n    else if(this.state.chosen == \"minefield\"){\r\n      desc = \"68% of fields occupied \\n 22% assasins\";\r\n    }\r\n    let newText = desc.split ('\\n').map ((item, i) => <p key={i}>{item}</p>);\r\n    return (\r\n      <div>\r\n        <select  className = \"content\" onChange={(e) => this.OwnChangeHandler(e)}>\r\n          {entries}\r\n        </select>\r\n        <br/>\r\n        description:<br/>\r\n        {newText}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass GameCreator extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      value: 5,\r\n      gameState:0,\r\n      words:[],\r\n      option:0,\r\n    };\r\n  }\r\n  render(){\r\n    if(this.state.gameState == 0){\r\n      return(\r\n        <div id = \"container\">\r\n          <h1>\r\n            Codenames\r\n          </h1>\r\n          <button className = \"button\" onClick = {() => this.createGame()}>\r\n            Create Game\r\n          </button>\r\n          <NameForm selectChangeHandler = {(e)=>this.selectChangeHandler(e)} submitHandler = {()=> this.createGame()} changeCallback = {(props)=>this.changeHandler(props)}/>\r\n        </div>\r\n      );\r\n    }\r\n    else{\r\n      return(\r\n        <div id = \"container\">\r\n          <h1>\r\n          Codenames\r\n          </h1>\r\n          <Field words = {this.state.words} dimensions = {this.state.value}></Field>\r\n        </div>\r\n\r\n        \r\n      );\r\n    }\r\n    \r\n  }\r\n  changeHandler(props){\r\n    this.setState({value:props.value})\r\n  }\r\n  createGame(){\r\n    this.setState({gameState:1});\r\n    //this.getDataAxios(this.state.value);\r\n    this.getData(this.state.value);\r\n  }\r\n  getData(num){\r\n    const _ = require('underscore').default;\r\n    let words = [\"Acne\",\"Acre\",\"Addendum\",\"Advertise\",\"Aircraft\",\"Aisle\",\"Alligator\",\"Alphabetize\",\"America\",\"Ankle\",\"Apathy\",\"Applause\",\"Applesauc\",\"Application\",\"Archaeologist\",\"Aristocrat\",\"Arm\",\"Armada\",\"Asleep\",\"Astronaut\",\"Athlete\",\"Atlantis\",\"Aunt\",\"Avocado\",\"Baby-Sitter\",\"Backbone\",\"Bag\",\"Baguette\",\"Bald\",\"Balloon\",\"Banana\",\"Banister\",\"Baseball\",\"Baseboards\",\"Basketball\",\"Bat\",\"Battery\",\"Beach\",\"Beanstalk\",\"Bedbug\",\"Beer\",\"Beethoven\",\"Belt\",\"Bib\",\"Bicycle\",\"Big\",\"Bike\",\"Billboard\",\"Bird\",\"Birthday\",\"Bite\",\"Blacksmith\",\"Blanket\",\"Bleach\",\"Blimp\",\"Blossom\",\"Blueprint\",\"Blunt\",\"Blur\",\"Boa\",\"Boat\",\"Bob\",\"Bobsled\",\"Body\",\"Bomb\",\"Bonnet\",\"Book\",\"Booth\",\"Bowtie\",\"Box\",\"Boy\",\"Brainstorm\",\"Brand\",\"Brave\",\"Bride\",\"Bridge\",\"Broccoli\",\"Broken\",\"Broom\",\"Bruise\",\"Brunette\",\"Bubble\",\"Buddy\",\"Buffalo\",\"Bulb\",\"Bunny\",\"Bus\",\"Buy\",\"Cabin\",\"Cafeteria\",\"Cake\",\"Calculator\",\"Campsite\",\"Can\",\"Canada\",\"Candle\",\"Candy\",\"Cape\",\"Capitalism\",\"Car\",\"Cardboard\",\"Cartography\",\"Cat\",\"Cd\",\"Ceiling\",\"Cell\",\"Century\",\"Chair\",\"Chalk\",\"Champion\",\"Charger\",\"Cheerleader\",\"Chef\",\"Chess\",\"Chew\",\"Chicken\",\"Chime\",\"China\",\"Chocolate\",\"Church\",\"Circus\",\"Clay\",\"Cliff\",\"Cloak\",\"Clockwork\",\"Clown\",\"Clue\",\"Coach\",\"Coal\",\"Coaster\",\"Cog\",\"Cold\",\"College\",\"Comfort\",\"Computer\",\"Cone\",\"Constrictor\",\"Continuum\",\"Conversation\",\"Cook\",\"Coop\",\"Cord\",\"Corduroy\",\"Cot\",\"Cough\",\"Cow\",\"Cowboy\",\"Crayon\",\"Cream\",\"Crisp\",\"Criticize\",\"Crow\",\"Cruise\",\"Crumb\",\"Crust\",\"Cuff\",\"Curtain\",\"Cuticle\",\"Czar\",\"Dad\",\"Dart\",\"Dawn\",\"Day\",\"Deep\",\"Defect\",\"Dent\",\"Dentist\",\"Desk\",\"Dictionary\",\"Dimple\",\"Dirty\",\"Dismantle\",\"Ditch\",\"Diver\",\"Doctor\",\"Dog\",\"Doghouse\",\"Doll\",\"Dominoes\",\"Door\",\"Dot\",\"Drain\",\"Draw\",\"Dream\",\"Dress\",\"Drink\",\"Drip\",\"Drums\",\"Dryer\",\"Duck\",\"Dump\",\"Dunk\",\"Dust\",\"Ear\",\"Eat\",\"Ebony\",\"Elbow\",\"Electricity\",\"Elephant\",\"Elevator\",\"Elf\",\"Elm\",\"Engine\",\"England\",\"Ergonomic\",\"Escalator\",\"Eureka\",\"Europe\",\"Evolution\",\"Extension\",\"Eyebrow\",\"Fan\",\"Fancy\",\"Fast\",\"Feast\",\"Fence\",\"Feudalism\",\"Fiddle\",\"Figment\",\"Finger\",\"Fire\",\"First\",\"Fishing\",\"Fix\",\"Fizz\",\"Flagpole\",\"Flannel\",\"Flashlight\",\"Flock\",\"Flotsam\",\"Flower\",\"Flu\",\"Flush\",\"Flutter\",\"Fog\",\"Foil\",\"Football\",\"Forehead\",\"Forever\",\"Fortnight\",\"France\",\"Freckle\",\"Freight\",\"Fringe\",\"Frog\",\"Frown\",\"Gallop\",\"Game\",\"Garbage\",\"Garden\",\"Gasoline\",\"Gem\",\"Ginger\",\"Gingerbread\",\"Girl\",\"Glasses\",\"Goblin\",\"Gold\",\"Goodbye\",\"Grandpa\",\"Grape\",\"Grass\",\"Gratitude\",\"Gray\",\"Green\",\"Guitar\",\"Gum\",\"Gumball\",\"Hair\",\"Half\",\"Handle\",\"Handwriting\",\"Hang\",\"Happy\",\"Hat\",\"Hatch\",\"Headache\",\"Heart\",\"Hedge\",\"Helicopter\",\"Hem\",\"Hide\",\"Hill\",\"Hockey\",\"Homework\",\"Honk\",\"Hopscotch\",\"Horse\",\"Hose\",\"Hot\",\"House\",\"Houseboat\",\"Hug\",\"Humidifier\",\"Hungry\",\"Hurdle\",\"Hurt\",\"Hut\",\"Ice\",\"Implode\",\"Inn\",\"Inquisition\",\"Intern\",\"Internet\",\"Invitation\",\"Ironic\",\"Ivory\",\"Ivy\",\"Jade\",\"Japan\",\"Jeans\",\"Jelly\",\"Jet\",\"Jig\",\"Jog\",\"Journal\",\"Jump\",\"Key\",\"Killer\",\"Kilogram\",\"King\",\"Kitchen\",\"Kite\",\"Knee\",\"Kneel\",\"Knife\",\"Knight\",\"Koala\",\"Lace\",\"Ladder\",\"Ladybug\",\"Lag\",\"Landfill\",\"Lap\",\"Laugh\",\"Laundry\",\"Law\",\"Lawn\",\"Lawnmower\",\"Leak\",\"Leg\",\"Letter\",\"Level\",\"Lifestyle\",\"Ligament\",\"Light\",\"Lightsaber\",\"Lime\",\"Lion\",\"Lizard\",\"Log\",\"Loiterer\",\"Lollipop\",\"Loveseat\",\"Loyalty\",\"Lunch\",\"Lunchbox\",\"Lyrics\",\"Machine\",\"Macho\",\"Mailbox\",\"Mammoth\",\"Mark\",\"Mars\",\"Mascot\",\"Mast\",\"Matchstick\",\"Mate\",\"Mattress\",\"Mess\",\"Mexico\",\"Midsummer\",\"Mine\",\"Mistake\",\"Modern\",\"Mold\",\"Mom\",\"Monday\",\"Money\",\"Monitor\",\"Monster\",\"Mooch\",\"Moon\",\"Mop\",\"Moth\",\"Motorcycle\",\"Mountain\",\"Mouse\",\"Mower\",\"Mud\",\"Music\",\"Mute\",\"Nature\",\"Negotiate\",\"Neighbor\",\"Nest\",\"Neutron\",\"Niece\",\"Night\",\"Nightmare\",\"Nose\",\"Oar\",\"Observatory\",\"Office\",\"Oil\",\"Old\",\"Olympian\",\"Opaque\",\"Opener\",\"Orbit\",\"Organ\",\"Organize\",\"Outer\",\"Outside\",\"Ovation\",\"Overture\",\"Pail\",\"Paint\",\"Pajamas\",\"Palace\",\"Pants\",\"Paper\",\"Paper\",\"Park\",\"Parody\",\"Party\",\"Password\",\"Pastry\",\"Pawn\",\"Pear\",\"Pen\",\"Pencil\",\"Pendulum\",\"Penis\",\"Penny\",\"Pepper\",\"Personal\",\"Philosopher\",\"Phone\",\"Photograph\",\"Piano\",\"Picnic\",\"Pigpen\",\"Pillow\",\"Pilot\",\"Pinch\",\"Ping\",\"Pinwheel\",\"Pirate\",\"Plaid\",\"Plan\",\"Plank\",\"Plate\",\"Platypus\",\"Playground\",\"Plow\",\"Plumber\",\"Pocket\",\"Poem\",\"Point\",\"Pole\",\"Pomp\",\"Pong\",\"Pool\",\"Popsicle\",\"Population\",\"Portfolio\",\"Positive\",\"Post\",\"Princess\",\"Procrastinate\",\"Protestant\",\"Psychologist\",\"Publisher\",\"Punk\",\"Puppet\",\"Puppy\",\"Push\",\"Puzzle\",\"Quarantine\",\"Queen\",\"Quicksand\",\"Quiet\",\"Race\",\"Radio\",\"Raft\",\"Rag\",\"Rainbow\",\"Rainwater\",\"Random\",\"Ray\",\"Recycle\",\"Red\",\"Regret\",\"Reimbursement\",\"Retaliate\",\"Rib\",\"Riddle\",\"Rim\",\"Rink\",\"Roller\",\"Room\",\"Rose\",\"Round\",\"Roundabout\",\"Rung\",\"Runt\",\"Rut\",\"Sad\",\"Safe\",\"Salmon\",\"Salt\",\"Sandbox\",\"Sandcastle\",\"Sandwich\",\"Sash\",\"Satellite\",\"Scar\",\"Scared\",\"School\",\"Scoundrel\",\"Scramble\",\"Scuff\",\"Seashell\",\"Season\",\"Sentence\",\"Sequins\",\"Set\",\"Shaft\",\"Shallow\",\"Shampoo\",\"Shark\",\"Sheep\",\"Sheets\",\"Sheriff\",\"Shipwreck\",\"Shirt\",\"Shoelace\",\"Short\",\"Shower\",\"Shrink\",\"Sick\",\"Siesta\",\"Silhouette\",\"Singer\",\"Sip\",\"Skate\",\"Skating\",\"Ski\",\"Slam\",\"Sleep\",\"Sling\",\"Slow\",\"Slump\",\"Smith\",\"Sneeze\",\"Snow\",\"Snuggle\",\"Song\",\"Space\",\"Spare\",\"Speakers\",\"Spider\",\"Spit\",\"Sponge\",\"Spool\",\"Spoon\",\"Spring\",\"Sprinkler\",\"Spy\",\"Square\",\"Squint\",\"Stairs\",\"Standing\",\"Star\",\"State\",\"Stick\",\"Stockholder\",\"Stoplight\",\"Stout\",\"Stove\",\"Stowaway\",\"Straw\",\"Stream\",\"Streamline\",\"Stripe\",\"Student\",\"Sun\",\"Sunburn\",\"Sushi\",\"Swamp\",\"Swarm\",\"Sweater\",\"Swimming\",\"Swing\",\"Tachometer\",\"Talk\",\"Taxi\",\"Teacher\",\"Teapot\",\"Teenager\",\"Telephone\",\"Ten\",\"Tennis\",\"Thief\",\"Think\",\"Throne\",\"Through\",\"Thunder\",\"Tide\",\"Tiger\",\"Time\",\"Tinting\",\"Tiptoe\",\"Tiptop\",\"Tired\",\"Tissue\",\"Toast\",\"Toilet\",\"Tool\",\"Toothbrush\",\"Tornado\",\"Tournament\",\"Tractor\",\"Train\",\"Trash\",\"Treasure\",\"Tree\",\"Triangle\",\"Trip\",\"Truck\",\"Tub\",\"Tuba\",\"Tutor\",\"Television\",\"Twang\",\"Twig\",\"Twitterpated\",\"Type\",\"Unemployed\",\"Upgrade\",\"Vest\",\"Vision\",\"Wag\",\"Water\",\"Watermelon\",\"Wax\",\"Wedding\",\"Weed\",\"Welder\",\"Whatever\",\"Wheelchair\",\"Whiplash\",\"Whisk\",\"Whistle\",\"White\",\"Wig\",\"Will\",\"Windmill\",\"Winter\",\"Wish\",\"Wolf\",\"Wool\",\"World\",\"Worm\",\"Wristwatch\",\"Yardstick\",\"Zamboni\",\"Zen\",\"Zero\",\"Zipper\",\"Zone\",\"Zoo\"];\r\n    let ret = _.sample(words, num*num);\r\n    this.setState({words:ret});\r\n  }\r\n  async getDataAxios(num){\r\n    num = num*num;\r\n    const axios = require('axios').default;\r\n\r\n    const response =\r\n      await axios.get(\"https://random-word-api.herokuapp.com/word\",\r\n          { params: {number: num}}\r\n      )\r\n    \r\n    this.setState({words:response.data});\r\n  }\r\n  selectChangeHandler(e){\r\n    let event = e.event;\r\n    let id = e.selectId;\r\n    if(id == \"gameplay\"){\r\n      this.setState({option:event.target.event});\r\n    }\r\n    else if(id == \"options\"){\r\n      //TODO\r\n    }\r\n    \r\n  }\r\n}\r\n  \r\n\r\nclass Field extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      dimensions: props.dimensions,\r\n    }\r\n  }\r\n\r\n  render(){\r\n    var rows = [];\r\n    for(let r = 0;r<this.state.dimensions;r++){\r\n      let row = [];\r\n      for(let rr = 0;rr<this.state.dimensions;rr++){\r\n        row.push(<Tile word = {this.props.words[r*this.state.dimensions+rr]} size = {50/this.state.dimensions}/>);//TODO: add key\r\n      }\r\n\r\n      rows.push(\r\n        <tr>\r\n          {row}\r\n        </tr>\r\n      );\r\n    }\r\n    return(\r\n      <table>\r\n        <tbody>\r\n          {rows}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nclass Tile extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n  }\r\n\r\n  render(){\r\n\r\n    let divstyle = {\r\n      textAlign: 'center',\r\n      float: 'left',\r\n      width: this.props.size*1.3 + 'vw',\r\n      height: this.props.size*1.5 +'vh',\r\n    };\r\n    let buttonstyle = {\r\n      width: '100%',\r\n      height: '100%',\r\n      display: 'inline-block',\r\n      wordWrap: 'break-word',\r\n      fontSize: this.props.size*0.3 + 'vmin',\r\n    };\r\n\r\n    return(\r\n      \r\n      <td style = {divstyle}>\r\n        <button style = {buttonstyle} >\r\n         {this.props.word}\r\n        </button>\r\n      </td>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <GameCreator />,\r\n  document.getElementById('root')\r\n);\r\n  \r\n\r\n/*\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n  \r\nclass Board extends React.Component {\r\n  \r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n        value = {this.props.squares[i]}\r\n        onClick = {() => this.props.onClick(i)}\r\n      />  \r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      stepNumber: 0,\r\n      XIsNext: true,\r\n    };\r\n  }\r\n  handleClick(i){\r\n    const history = this.state.history.slice(0,this.state.stepNumber + 1);\r\n    const current = history[history.length-1];\r\n    const squares = current.squares.slice();\r\n \r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;    \r\n    }\r\n    squares[i] = this.state.XIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares:squares,\r\n      }]),\r\n      stepNumber: history.length,\r\n      XIsNext: !this.state.XIsNext,\r\n    });\r\n    \r\n  }\r\n  jumpTo(i){\r\n    this.setState({\r\n      stepNumber:i,\r\n      XIsNext: (i%2) === 0,\r\n    });\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step,move) =>{\r\n      const desc = move ?\r\n        'Go to move #' + move:\r\n        'Go to game start';\r\n      return(\r\n        <li key ={move}>\r\n          <button onClick={() => this.jumpTo(move)}>\r\n            {desc}\r\n          </button>\r\n        </li>\r\n\r\n      );\r\n    });\r\n\r\n\r\n\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } \r\n    else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');    \r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares = {current.squares}\r\n            onClick = {(i)=>this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n  \r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n*/"],"sourceRoot":""}