{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","XIsNext","slice","length","calculateWinner","setState","concat","status","current","winner","moves","map","step","move","desc","key","jumpTo","xIsNext","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"iPAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMG,O,IAKPC,E,2KAESC,GAAI,IAAD,OACd,OACE,kBAACN,EAAD,CACEI,MAASG,KAAKN,MAAMO,QAAQF,GAC5BH,QAAW,kBAAM,EAAKF,MAAME,QAAQG,Q,+BAMxC,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA3BTC,IAAMC,WAkCpBC,E,kDACJ,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IACDY,MAAQ,CACXC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPK,E,wDAUNZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAEZ,KAAKM,MAAMI,WAAa,GAE7DT,EADUM,EAAQA,EAAQM,OAAO,GACfZ,QAAQW,QAE5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMK,QAAU,IAAM,IACxCX,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAC,CACvBf,QAAQA,KAEVS,WAAYH,EAAQM,OACpBF,SAAUX,KAAKM,MAAMK,a,6BAIlBZ,GACLC,KAAKe,SAAS,CACZL,WAAWX,EACXY,QAAUZ,EAAE,IAAO,M,+BAGb,IAsBJkB,EAtBG,OACDV,EAAUP,KAAKM,MAAMC,QACrBW,EAAUX,EAAQP,KAAKM,MAAMI,YAC7BS,EAASL,EAAgBI,EAAQjB,SAEjCmB,EAAQb,EAAQc,KAAI,SAACC,EAAKC,GAC9B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,wBAAIE,IAAMF,GACR,4BAAQ3B,QAAS,kBAAM,EAAK8B,OAAOH,KAChCC,OAkBT,OANEP,EADEE,EACO,WAAaA,EAGb,iBAAmBnB,KAAKM,MAAMqB,QAAU,IAAM,KAIvD,yBAAKhC,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAAWiB,EAAQjB,QACnBL,QAAW,SAACG,GAAD,OAAK,EAAK6B,YAAY7B,OAGrC,yBAAKJ,UAAU,aACb,6BAAMsB,GACN,4BAAKG,S,GA3EIjB,IAAMC,WAyFzB,SAASU,EAAgBb,GAWvB,IAVA,IAAM4B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA9B,EAAI,EAAGA,EAAI8B,EAAMhB,OAAQd,IAAK,CAAC,IAAD,cACnB8B,EAAM9B,GADa,GAC9B+B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI/B,EAAQ6B,IAAM7B,EAAQ6B,KAAO7B,EAAQ8B,IAAM9B,EAAQ6B,KAAO7B,EAAQ+B,GACpE,OAAO/B,EAAQ6B,GAGnB,OAAO,KAtBTG,IAASC,OACP,kBAAC7B,EAAD,MACA8B,SAASC,eAAe,W","file":"static/js/main.66ed939c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n  \r\nclass Board extends React.Component {\r\n  \r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n        value = {this.props.squares[i]}\r\n        onClick = {() => this.props.onClick(i)}\r\n      />  \r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      stepNumber: 0,\r\n      XIsNext: true,\r\n    };\r\n  }\r\n  handleClick(i){\r\n    const history = this.state.history.slice(0,this.state.stepNumber + 1);\r\n    const current = history[history.length-1];\r\n    const squares = current.squares.slice();\r\n \r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;    \r\n    }\r\n    squares[i] = this.state.XIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares:squares,\r\n      }]),\r\n      stepNumber: history.length,\r\n      XIsNext: !this.state.XIsNext,\r\n    });\r\n    \r\n  }\r\n  jumpTo(i){\r\n    this.setState({\r\n      stepNumber:i,\r\n      XIsNext: (i%2) === 0,\r\n    });\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step,move) =>{\r\n      const desc = move ?\r\n        'Go to move #' + move:\r\n        'Go to game start';\r\n      return(\r\n        <li key ={move}>\r\n          <button onClick={() => this.jumpTo(move)}>\r\n            {desc}\r\n          </button>\r\n        </li>\r\n\r\n      );\r\n    });\r\n\r\n\r\n\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } \r\n    else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');    \r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares = {current.squares}\r\n            onClick = {(i)=>this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n  \r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}